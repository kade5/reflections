What happens when you initialize a repository? Why do you need to do it?
		git creates a .git folder and allows you to start creating commits when you initialize a
		repository. Without doing this you cannot create commits.
		
How is the staging area different from the working directory and the repository? What value do 
you think it offers?
	The staging area is where you add files that you want to commit. You may not want to commit 
	all of the files in a working directory, so that is why the staging area exists.

How can you use the staging area to make sure you have one commit per logical change?
	I can use the staging area to put only the files I want to commit in.

What are some situations when branches would be helpful in keeping your history organized?
How would branches help?
	Branches would be helpful when you want to make some experimental changes, but would still like
to have a working version of your code or when you just want a different version of your code.
Branches help by allowing you to make separate commits to the different versions.

How do the diagrams help you visualize the branch structure?
	I makes literal branches that you can trace back to see all of the commits on that
	branch.
	
What is the result of merging two branches together? Why do we represent it in the diagram 
the way we do?
	Merging two branches merges all of the files in each commit together and combines their
	commits. We represent it in the diagram as the merged branch pointing to both branches.